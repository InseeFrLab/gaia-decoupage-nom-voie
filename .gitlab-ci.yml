variables:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.7.1"
  HTTP_PROXY: "http://proxy-app.http.insee.fr:3128"
  HTTPS_PROXY: "http://proxy-app.http.insee.fr:3128"
  NO_PROXY: ".insee.fr,.insee.eu,.insee.intra,localhost,insee.test"
  NEXUS_URL: "https://nexus.insee.fr"
  NEXUS_HOST: "nexus.insee.fr"
  DEPOT_DEPENDANCES: "https://nexus.insee.fr/repository/pypi-proxy/pypi"
  DEPOT_DEPENDANCES_INDEX: "https://nexus.insee.fr/repository/pypi-proxy/simple/"
  DEPOT_LIVRAISON: "https://nexus.insee.fr/repository/pypi-internal/"


default:
  tags:
    - docker

stages:
  - build
  - test
  - analyse
  - deploy


.default_configuration: &default_configuration
    # Mise à jour de pip
  - pip install --upgrade pip
    # Configure pip pour faire confiance au serveur d'hébergement 
  - pip config set global.trusted-host ${NEXUS_HOST} 
    # Configure pip pour rechercher les dépendances dans le dépot ${DEPOT_DEPENDANCES} (dépréciée)
  - pip config set global.index ${DEPOT_DEPENDANCES}
    # Configure pip pour rechercher les dépendances dans le dépot ${DEPOT_DEPENDANCES}
  - pip config set global.index-url ${DEPOT_DEPENDANCES_INDEX}
    # Installation de poetry
  - pip install poetry==${POETRY_VERSION}
    # Désactive la vérification des certificats SSL lors de l'accès au serveur nexus.insee.fr
  - poetry config certificates.nexus.cert false

build:
  image: python:$PYTHON_VERSION
  stage: build
  before_script:
    - *default_configuration
  script:
      # Définition du dépôt contenant les dépendances
    - poetry source add nexus ${DEPOT_DEPENDANCES_INDEX} --priority=primary
      # Modification de la priorité du dépôt par défaut
    #- poetry source add --priority=supplemental PyPI
      # Vérification de la configuration (les commandes poetry source écrivent dans pyproject.toml)
    - cat pyproject.toml
      # Installation des dépendances
    - PYTHONWARNINGS="ignore:Unverified HTTPS request" poetry install --no-interaction
    - poetry add poetry-plugin-export
    - poetry config warnings.export false
      # Génération de requirements.txt
    - poetry export --output requirements.txt --without-hashes
      # Génération de requirements-dev.txt
    - poetry export --output requirements-dev.txt --without-hashes --with dev
      # Création du livrable sous dist
    - poetry build
  artifacts:
    paths:
      - dist
      - requirements.txt
      - requirements-dev.txt
      - pyproject.toml
    expire_in: 1 week

pages:
  stage: build
  image: gitlab-registry.insee.fr:443/kubernetes/images/build/node:18
  before_script:
    - npm install --global retypeapp
  script:
    - 'retype build --override "{ \"url\": \"$CI_PAGES_URL\" }" --output $CI_PROJECT_DIR/public'
  artifacts:
    paths:
      - public

test:
  image: python:$PYTHON_VERSION
  stage: test
  before_script:
    - *default_configuration
  script:
    - poetry install --no-interaction --with dev
    - poetry run pytest
  allow_failure: true

coverage:
  image: python:$PYTHON_VERSION
  stage: analyse
  before_script:
    - *default_configuration
  script:
    - poetry install --no-interaction --with dev
    - poetry run coverage run -m pytest
    - poetry run coverage xml
  artifacts:
    paths:
      - coverage.xml
    expire_in: 1 week
  allow_failure: true

sonar:
  stage: deploy
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SOURCE_FOLDER: "src/decoupage_libelles"
    EXCLUSIONS: "**/tests/**"
    PROJECT_KEY: "geographie_gaia_gaia-decoupage-libelles-voies_AY069E_6dRGMg48-JnXI"
    PROJECT_NAME: "Gaia - découpage libellés de voies"
    COVERAGE_REPORT: "coverage.xml"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  dependencies:
    - build
    - coverage
  script:
    - curl -k https://nexus.insee.fr/repository/certs/insee/insee.ts -o /tmp/insee.ts
    - export SONAR_SCANNER_OPTS="-Djavax.net.ssl.trustStore=/tmp/insee.ts"
    - sonar-scanner -X -Dsonar.host.url="${SONAR_HOST_URL}" -Dsonar.login="${SONAR_TOKEN}" -Dsonar.projectName="${PROJECT_NAME}" -Dsonar.qualitygate.wait=true -Dsonar.language="py" -Dsonar.python.version="3.11" -Dsonar.sources="${SOURCE_FOLDER}" -Dsonar.exclusions="${EXCLUSIONS}" -Dsonar.python.coverage.reportPaths="${COVERAGE_REPORT}" -Dsonar.projectKey="${PROJECT_KEY}" -Djavax.net.ssl.trustStore="/tmp/insee.ts"
  allow_failure: true

black:
  image: python:$PYTHON_VERSION
  stage: analyse
  before_script:
    - *default_configuration
  script:
    - poetry install --no-interaction --with dev
    - poetry run black --check --verbose .
  allow_failure: true

flake:
  image: python:$PYTHON_VERSION
  stage: analyse
  before_script:
    - *default_configuration
  script:
    - poetry install --no-interaction --with dev
    - poetry run flake8
  allow_failure: true

deploy-nexus:
  stage: deploy
  image: python:$PYTHON_VERSION
  before_script:
    - *default_configuration
  script:
    - poetry config repositories.nexus ${DEPOT_LIVRAISON}
    - poetry config --unset http-basic.nexus
    - poetry install
    - poetry -v publish -r nexus
  needs: 
    - build
    - test
    - flake
  #when: manual
